{"ast":null,"code":"var _jsxFileName = \"/Users/akwg7/Documents/react/RISE1/file-explorer-rise/frontend/src/pages/HomePage/Files/ImageGrid.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\n// Rendering individual images\n// const Image = ({ image }) => {\n//   return (\n//     <div className=\"file-item\">\n//       <img alt={`img - ${image.id}`} src={image.src} className=\"file-img\" />\n//     </div>\n//   );\n// };\n\n// // ImageList Component//\n// const ImageGride = ({ images }) => {\n//   // render each image by calling Image component\n//   const renderImage = (image, index) => {\n//     return <Image image={image} key={`${image.id}-image`} />;\n//   };\n//   // Return the list of files//\n\n//   return (\n//     <div>\n//       <section className=\"file-list\">{images.map(renderImage)}</section>\n//     </div>\n//   );\n// };\n\n// export default ImageGride;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGride = _ref => {\n  _s();\n  let {\n    images\n  } = _ref;\n  const [pics, setPics] = useState([]);\n  const removeImage = id => {\n    // this is the line that you are looking for\n    setPics(oldState => oldState.filter(item => item.id !== id));\n  };\n  useEffect(() => {\n    //fake fetch data\n    setPics(images);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App \",\n    children: pics.map(pic => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: pic.src,\n          alt: \"\",\n          className: \"file-list\"\n        }, `${pic.id}-image`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeImage(pic.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGride, \"B7F4CiVX+kV+wQm5zPyQGjqy2kU=\");\n_c = ImageGride;\nexport default ImageGride;\nvar _c;\n$RefreshReg$(_c, \"ImageGride\");","map":{"version":3,"names":["React","useState","useEffect","ImageGride","images","pics","setPics","removeImage","id","oldState","filter","item","map","pic","src"],"sources":["/Users/akwg7/Documents/react/RISE1/file-explorer-rise/frontend/src/pages/HomePage/Files/ImageGrid.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\n// Rendering individual images\n// const Image = ({ image }) => {\n//   return (\n//     <div className=\"file-item\">\n//       <img alt={`img - ${image.id}`} src={image.src} className=\"file-img\" />\n//     </div>\n//   );\n// };\n\n// // ImageList Component//\n// const ImageGride = ({ images }) => {\n//   // render each image by calling Image component\n//   const renderImage = (image, index) => {\n//     return <Image image={image} key={`${image.id}-image`} />;\n//   };\n//   // Return the list of files//\n\n//   return (\n//     <div>\n//       <section className=\"file-list\">{images.map(renderImage)}</section>\n//     </div>\n//   );\n// };\n\n// export default ImageGride;\n\nconst ImageGride = ({ images }) => {\n  const [pics, setPics] = useState([]);\n\n  const removeImage = (id) => {\n    // this is the line that you are looking for\n    setPics((oldState) => oldState.filter((item) => item.id !== id));\n  };\n\n  useEffect(() => {\n    //fake fetch data\n    setPics(images);\n  }, []);\n  return (\n    <div className=\"App \">\n      {pics.map((pic) => {\n        return (\n          <div>\n            <img\n              src={pic.src}\n              alt=\"\"\n              key={`${pic.id}-image`}\n              className=\"file-list\"\n            />\n            <button onClick={() => removeImage(pic.id)}>X</button>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ImageGride;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAEA,MAAMC,UAAU,GAAG,QAAgB;EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMM,WAAW,GAAIC,EAAE,IAAK;IAC1B;IACAF,OAAO,CAAEG,QAAQ,IAAKA,QAAQ,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClE,CAAC;EAEDN,SAAS,CAAC,MAAM;IACd;IACAI,OAAO,CAACF,MAAM,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,UAClBC,IAAI,CAACO,GAAG,CAAEC,GAAG,IAAK;MACjB,oBACE;QAAA,wBACE;UACE,GAAG,EAAEA,GAAG,CAACC,GAAI;UACb,GAAG,EAAC,EAAE;UAEN,SAAS,EAAC;QAAW,GADf,GAAED,GAAG,CAACL,EAAG,QAAO;UAAA;UAAA;UAAA;QAAA,QAEtB,eACF;UAAQ,OAAO,EAAE,MAAMD,WAAW,CAACM,GAAG,CAACL,EAAE,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAW;MAAA;QAAA;QAAA;QAAA;MAAA,QAClD;IAEV,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA7BIL,UAAU;AAAA,KAAVA,UAAU;AA+BhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}