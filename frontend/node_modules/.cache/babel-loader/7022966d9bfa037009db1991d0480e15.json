{"ast":null,"code":"var _jsxFileName = \"/Users/akwg7/Documents/react/RISE1/file-explorer-rise/frontend/src/components/FolderTree/FolderTree.jsx\",\n  _s = $RefreshSig$();\nimport _ from \"lodash\";\nimport deepdash from \"deepdash\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport Tree from \"react-ui-tree\";\nimport TreeNode from \"./TreeNode\";\nimport \"react-ui-tree/dist/react-ui-tree.css\";\nimport { useLazyUpdateFolderTreeQuery } from \"../../apiServices/treeService\";\nimport { useDispatch } from \"react-redux\";\nimport { setFolderTree } from \"../../redux/folderTree/folderTreeSlice\";\nimport { treeData } from \"../../data/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndeepdash(_);\nconst deleteFromTree = (newTree, id) => {\n  let index = -1;\n  const getNode = (a, i) => {\n    if (a.id === id) {\n      index = i;\n      return true;\n    }\n    if (Array.isArray(a.children) && a.children.some(getNode)) {\n      if (~index) {\n        a.children.splice(index, 1);\n        index = -1;\n      }\n      return true;\n    }\n  };\n  [newTree].some(getNode);\n};\nconst FolderTree = _ref => {\n  _s();\n  let {\n    treeData,\n    handleClick,\n    isAdmin,\n    errorMsg = \"Please Provide treeData!\",\n    disableRightClick = false,\n    disableFileAndFolderAddition = false\n  } = _ref;\n  const dispatch = useDispatch();\n  const [tree, setTree] = useState(treeData || {});\n  let {\n    editableFileIds = []\n  } = treeData || {};\n  editableFileIds = useMemo(() => {\n    var _editableFileIds;\n    return Object.assign({}, ...((_editableFileIds = editableFileIds) === null || _editableFileIds === void 0 ? void 0 : _editableFileIds.map(id => ({\n      [id]: true\n    }))));\n  }, [editableFileIds]);\n  const [updateFolderTree] = useLazyUpdateFolderTreeQuery();\n  useEffect(() => {\n    if (treeData && Object.keys(treeData).length) {\n      setTree(prev => ({\n        ...prev,\n        ...treeData\n      }));\n    }\n  }, [treeData]);\n  useEffect(() => {\n    if (tree && Object.keys(tree).length) {\n      dispatch(setFolderTree(_.cloneDeep(tree)));\n    }\n  }, [dispatch, tree]);\n  const [data, setData] = useState(treeData);\n  const handleData = () => {\n    setData({\n      ...treeData\n    });\n  };\n  console.log(data);\n\n  /*===============EVENT HANDLERS STARTS========================== */\n  const handleRename = id => {\n    const renameObj = _.findDeep(tree, item => item.id === id, {\n      childrenPath: \"children\"\n    });\n    const response = prompt(\"Please rename\", renameObj.value.module);\n    // ignore empty string\n    if (!response) {\n      return;\n    }\n    renameObj.value.module = response;\n    const newTree = _.mapDeep(tree, item => item.id === id ? {\n      ...item,\n      ...renameObj.value\n    } : item, {\n      childrenPath: \"children\"\n    });\n    updateTree(newTree[0]);\n  };\n  const handleDelete = id => {\n    deleteFromTree(tree, id);\n    updateTree(tree);\n  };\n  const addItemToTree = (itemType, active) => {\n    const newItem = itemType === \"folder\" ? {\n      id: `root-${Date.now()}`,\n      module: `New ${itemType}`,\n      children: [],\n      collapsed: false\n    } : {\n      id: `${Date.now()}`,\n      leaf: true,\n      module: `New ${itemType}`\n    };\n    const newTree = _.mapDeep(tree, item => {\n      const cloneItem = Object.assign({}, item);\n      if (cloneItem) {\n        if (cloneItem.id === active.id && cloneItem.children) {\n          // folder\n          cloneItem.children.push(newItem);\n        }\n      }\n      return cloneItem;\n    });\n    updateTree(newTree[0]);\n  };\n  const updateTree = async newTree => {\n    const prevTree = tree;\n    setTree(oldTree => ({\n      ...oldTree,\n      ...newTree\n    }));\n    try {\n      if (newTree && Object.keys(newTree).length) {\n        await updateFolderTree({\n          id: newTree._id,\n          tree: _.cloneDeep(newTree)\n        });\n      }\n    } catch (error) {\n      alert(\"Something Unexpected Happened\");\n      setTree(oldTree => ({\n        ...oldTree,\n        ...prevTree\n      }));\n    }\n  };\n\n  /*===============EVENT HANDLERS ENDS========================== */\n\n  const treeNodeProps = {\n    addItemToTree,\n    handleDelete,\n    handleRename,\n    handleClick,\n    disableRightClick,\n    disableFileAndFolderAddition,\n    editableFileIds,\n    isAdmin\n  };\n  if (!treeData || !Object.keys(treeData).length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      paddingLeft: 20,\n      tree: tree,\n      onChange: updateTree,\n      renderNode: props => /*#__PURE__*/_jsxDEV(TreeNode, {\n        ...props,\n        ...treeNodeProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(FolderTree, \"oKZHI3WK3Ay8dx9vmhuvdL88+sc=\", false, function () {\n  return [useDispatch, useLazyUpdateFolderTreeQuery];\n});\n_c = FolderTree;\nexport { FolderTree };\nvar _c;\n$RefreshReg$(_c, \"FolderTree\");","map":{"version":3,"names":["_","deepdash","React","useEffect","useState","useMemo","Tree","TreeNode","useLazyUpdateFolderTreeQuery","useDispatch","setFolderTree","treeData","deleteFromTree","newTree","id","index","getNode","a","i","Array","isArray","children","some","splice","FolderTree","handleClick","isAdmin","errorMsg","disableRightClick","disableFileAndFolderAddition","dispatch","tree","setTree","editableFileIds","Object","assign","map","updateFolderTree","keys","length","prev","cloneDeep","data","setData","handleData","console","log","handleRename","renameObj","findDeep","item","childrenPath","response","prompt","value","module","mapDeep","updateTree","handleDelete","addItemToTree","itemType","active","newItem","Date","now","collapsed","leaf","cloneItem","push","prevTree","oldTree","_id","error","alert","treeNodeProps","props"],"sources":["/Users/akwg7/Documents/react/RISE1/file-explorer-rise/frontend/src/components/FolderTree/FolderTree.jsx"],"sourcesContent":["import _ from \"lodash\";\nimport deepdash from \"deepdash\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport Tree from \"react-ui-tree\";\n\nimport TreeNode from \"./TreeNode\";\n\nimport \"react-ui-tree/dist/react-ui-tree.css\";\nimport { useLazyUpdateFolderTreeQuery } from \"../../apiServices/treeService\";\nimport { useDispatch } from \"react-redux\";\nimport { setFolderTree } from \"../../redux/folderTree/folderTreeSlice\";\nimport { treeData } from \"../../data/data\";\n\ndeepdash(_);\n\nconst deleteFromTree = (newTree, id) => {\n  let index = -1;\n  const getNode = (a, i) => {\n    if (a.id === id) {\n      index = i;\n      return true;\n    }\n    if (Array.isArray(a.children) && a.children.some(getNode)) {\n      if (~index) {\n        a.children.splice(index, 1);\n        index = -1;\n      }\n      return true;\n    }\n  };\n  [newTree].some(getNode);\n};\n\nconst FolderTree = ({\n  treeData,\n  handleClick,\n  isAdmin,\n  errorMsg = \"Please Provide treeData!\",\n  disableRightClick = false,\n  disableFileAndFolderAddition = false,\n}) => {\n  const dispatch = useDispatch();\n  const [tree, setTree] = useState(treeData || {});\n\n  let { editableFileIds = [] } = treeData || {};\n  editableFileIds = useMemo(\n    () => Object.assign({}, ...editableFileIds?.map((id) => ({ [id]: true }))),\n    [editableFileIds]\n  );\n\n  const [updateFolderTree] = useLazyUpdateFolderTreeQuery();\n\n  useEffect(() => {\n    if (treeData && Object.keys(treeData).length) {\n      setTree((prev) => ({ ...prev, ...treeData }));\n    }\n  }, [treeData]);\n\n  useEffect(() => {\n    if (tree && Object.keys(tree).length) {\n      dispatch(setFolderTree(_.cloneDeep(tree)));\n    }\n  }, [dispatch, tree]);\n\n  const [data, setData] = useState(treeData);\n  const handleData = () => {\n    setData({ ...treeData });\n  };\n\n  console.log(data);\n\n  /*===============EVENT HANDLERS STARTS========================== */\n  const handleRename = (id) => {\n    const renameObj = _.findDeep(tree, (item) => item.id === id, {\n      childrenPath: \"children\",\n    });\n    const response = prompt(\"Please rename\", renameObj.value.module);\n    // ignore empty string\n    if (!response) {\n      return;\n    }\n    renameObj.value.module = response;\n\n    const newTree = _.mapDeep(\n      tree,\n      (item) =>\n        item.id === id\n          ? {\n              ...item,\n              ...renameObj.value,\n            }\n          : item,\n      { childrenPath: \"children\" }\n    );\n    updateTree(newTree[0]);\n  };\n\n  const handleDelete = (id) => {\n    deleteFromTree(tree, id);\n    updateTree(tree);\n  };\n\n  const addItemToTree = (itemType, active) => {\n    const newItem =\n      itemType === \"folder\"\n        ? {\n            id: `root-${Date.now()}`,\n            module: `New ${itemType}`,\n            children: [],\n            collapsed: false,\n          }\n        : { id: `${Date.now()}`, leaf: true, module: `New ${itemType}` };\n\n    const newTree = _.mapDeep(tree, (item) => {\n      const cloneItem = Object.assign({}, item);\n      if (cloneItem) {\n        if (cloneItem.id === active.id && cloneItem.children) {\n          // folder\n          cloneItem.children.push(newItem);\n        }\n      }\n      return cloneItem;\n    });\n    updateTree(newTree[0]);\n  };\n\n  const updateTree = async (newTree) => {\n    const prevTree = tree;\n    setTree((oldTree) => ({ ...oldTree, ...newTree }));\n    try {\n      if (newTree && Object.keys(newTree).length) {\n        await updateFolderTree({\n          id: newTree._id,\n          tree: _.cloneDeep(newTree),\n        });\n      }\n    } catch (error) {\n      alert(\"Something Unexpected Happened\");\n      setTree((oldTree) => ({ ...oldTree, ...prevTree }));\n    }\n  };\n\n  /*===============EVENT HANDLERS ENDS========================== */\n\n  const treeNodeProps = {\n    addItemToTree,\n    handleDelete,\n    handleRename,\n    handleClick,\n    disableRightClick,\n    disableFileAndFolderAddition,\n    editableFileIds,\n    isAdmin,\n  };\n\n  if (!treeData || !Object.keys(treeData).length) {\n    return <div>{errorMsg}</div>;\n  }\n\n  return (\n    <div>\n      <Tree\n        paddingLeft={20}\n        tree={tree}\n        onChange={updateTree}\n        renderNode={(props) => <TreeNode {...props} {...treeNodeProps} />}\n      />\n    </div>\n  );\n};\nexport { FolderTree };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}