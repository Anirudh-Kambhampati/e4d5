{"ast":null,"code":"var _jsxFileName = \"/Users/akwg7/Documents/react/RISE1/file-explorer-rise/frontend/src/components/CheckBox/Check.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport deepdash from \"deepdash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndeepdash(_);\nconst FolderCheckBox = /*#__PURE__*/React.memo(_c = _ref => {\n  let {\n    data,\n    checkboxData,\n    onChange,\n    hidden\n  } = _ref;\n  const isFile = !data.children && data.leaf;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: hidden ? \"hidden\" : \"\",\n      children: isFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: data.id,\n          type: \"checkbox\",\n          checked: checkboxData[data.id] || false,\n          className: \"mb-3 cursor-pointer\",\n          onChange: onChange,\n          id: data.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mx-2 cursor-pointer\",\n          htmlFor: data.id,\n          children: data.module\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-emerald-600 font-semibold\",\n        children: data.module\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), data.children && data.children.map(elt => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pl-3\",\n      children: /*#__PURE__*/_jsxDEV(FolderCheckBox, {\n        data: elt,\n        checkboxData: checkboxData,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)\n    }, elt.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n});\n_c2 = FolderCheckBox;\nconst Check = _ref2 => {\n  _s();\n  let {\n    doSubmit,\n    treeData,\n    formData\n  } = _ref2;\n  const [checkboxData, setCheckboxData] = useState({});\n  useEffect(() => {\n    setCheckboxData(prev => ({\n      ...formData\n    }));\n  }, [formData]);\n  const onChange = _ref3 => {\n    let {\n      target\n    } = _ref3;\n    setCheckboxData(prev => ({\n      ...prev,\n      [target.name]: target.checked\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const allIds = [];\n    Object.entries(checkboxData).forEach(_ref4 => {\n      let [k, v] = _ref4;\n      if (v) {\n        allIds.push(k);\n      }\n    });\n    doSubmit(allIds);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FolderCheckBox, {\n      data: treeData,\n      checkboxData: checkboxData,\n      onChange: onChange,\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: {\n        backgroundColor: \"powderblue\"\n      },\n      className: \"w-20\",\n      children: \"Share\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Check, \"rG8cjhmtaMcQhppA5Qyw/8lcIag=\");\n_c3 = Check;\nexport default _c4 = /*#__PURE__*/React.memo(Check);\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"FolderCheckBox$React.memo\");\n$RefreshReg$(_c2, \"FolderCheckBox\");\n$RefreshReg$(_c3, \"Check\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","_","deepdash","FolderCheckBox","memo","data","checkboxData","onChange","hidden","isFile","children","leaf","id","module","map","elt","Check","doSubmit","treeData","formData","setCheckboxData","prev","target","name","checked","handleSubmit","e","preventDefault","allIds","Object","entries","forEach","k","v","push","backgroundColor"],"sources":["/Users/akwg7/Documents/react/RISE1/file-explorer-rise/frontend/src/components/CheckBox/Check.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport deepdash from \"deepdash\";\n\ndeepdash(_);\n\nconst FolderCheckBox = React.memo(\n  ({ data, checkboxData, onChange, hidden }) => {\n    const isFile = !data.children && data.leaf;\n    return (\n      <div>\n        <div className={hidden ? \"hidden\" : \"\"}>\n          {isFile ? (\n            <div>\n              <input\n                name={data.id}\n                type=\"checkbox\"\n                checked={checkboxData[data.id] || false}\n                className=\"mb-3 cursor-pointer\"\n                onChange={onChange}\n                id={data.id}\n              />\n              <label className=\"mx-2 cursor-pointer\" htmlFor={data.id}>\n                {data.module}\n              </label>\n            </div>\n          ) : (\n            <div className=\"text-emerald-600 font-semibold\">{data.module}</div>\n          )}\n        </div>\n\n        {data.children &&\n          data.children.map((elt) => (\n            <div className=\"pl-3\" key={elt.id}>\n              <FolderCheckBox\n                data={elt}\n                checkboxData={checkboxData}\n                onChange={onChange}\n              />\n            </div>\n          ))}\n      </div>\n    );\n  }\n);\n\nconst Check = ({ doSubmit, treeData, formData }) => {\n  const [checkboxData, setCheckboxData] = useState({});\n\n  useEffect(() => {\n    setCheckboxData((prev) => ({ ...formData }));\n  }, [formData]);\n\n  const onChange = ({ target }) => {\n    setCheckboxData((prev) => ({ ...prev, [target.name]: target.checked }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const allIds = [];\n    Object.entries(checkboxData).forEach(([k, v]) => {\n      if (v) {\n        allIds.push(k);\n      }\n    });\n    doSubmit(allIds);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FolderCheckBox\n        data={treeData}\n        checkboxData={checkboxData}\n        onChange={onChange}\n        hidden\n      />\n\n      <button\n        type=\"submit\"\n        style={{ backgroundColor: \"powderblue\" }}\n        className=\"w-20\"\n      >\n        Share\n      </button>\n    </form>\n  );\n};\n\nexport default React.memo(Check);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}