{"ast":null,"code":"'use strict';\n\nvar Tree = require('js-tree');\nvar proto = Tree.prototype;\nproto.updateNodesPosition = function () {\n  var top = 1;\n  var left = 1;\n  var root = this.getIndex(1);\n  var self = this;\n  root.top = top++;\n  root.left = left++;\n  if (root.children && root.children.length) {\n    walk(root.children, root, left, root.node.collapsed);\n  }\n  function walk(children, parent, left, collapsed) {\n    var height = 1;\n    children.forEach(function (id) {\n      var node = self.getIndex(id);\n      if (collapsed) {\n        node.top = null;\n        node.left = null;\n      } else {\n        node.top = top++;\n        node.left = left;\n      }\n      if (node.children && node.children.length) {\n        height += walk(node.children, node, left + 1, collapsed || node.node.collapsed);\n      } else {\n        node.height = 1;\n        height += 1;\n      }\n    });\n    if (parent.node.collapsed) parent.height = 1;else parent.height = height;\n    return parent.height;\n  }\n};\nproto.move = function (fromId, toId, placement) {\n  if (fromId === toId || toId === 1) return;\n  var obj = this.remove(fromId);\n  var index = null;\n  if (placement === 'before') index = this.insertBefore(obj, toId);else if (placement === 'after') index = this.insertAfter(obj, toId);else if (placement === 'prepend') index = this.prepend(obj, toId);else if (placement === 'append') index = this.append(obj, toId);\n\n  // todo: perf\n  this.updateNodesPosition();\n  return index;\n};\nproto.getNodeByTop = function (top) {\n  var indexes = this.indexes;\n  for (var id in indexes) {\n    if (indexes.hasOwnProperty(id)) {\n      if (indexes[id].top === top) return indexes[id];\n    }\n  }\n};\nmodule.exports = Tree;","map":{"version":3,"names":["Tree","require","proto","prototype","updateNodesPosition","top","left","root","getIndex","self","children","length","walk","node","collapsed","parent","height","forEach","id","move","fromId","toId","placement","obj","remove","index","insertBefore","insertAfter","prepend","append","getNodeByTop","indexes","hasOwnProperty","module","exports"],"sources":["/Users/akwg7/Documents/react/RISE1/rise-clean/frontend/node_modules/react-ui-tree/dist/tree.js"],"sourcesContent":["'use strict';\n\nvar Tree = require('js-tree');\nvar proto = Tree.prototype;\n\nproto.updateNodesPosition = function () {\n  var top = 1;\n  var left = 1;\n  var root = this.getIndex(1);\n  var self = this;\n\n  root.top = top++;\n  root.left = left++;\n\n  if (root.children && root.children.length) {\n    walk(root.children, root, left, root.node.collapsed);\n  }\n\n  function walk(children, parent, left, collapsed) {\n    var height = 1;\n    children.forEach(function (id) {\n      var node = self.getIndex(id);\n      if (collapsed) {\n        node.top = null;\n        node.left = null;\n      } else {\n        node.top = top++;\n        node.left = left;\n      }\n\n      if (node.children && node.children.length) {\n        height += walk(node.children, node, left + 1, collapsed || node.node.collapsed);\n      } else {\n        node.height = 1;\n        height += 1;\n      }\n    });\n\n    if (parent.node.collapsed) parent.height = 1;else parent.height = height;\n    return parent.height;\n  }\n};\n\nproto.move = function (fromId, toId, placement) {\n  if (fromId === toId || toId === 1) return;\n\n  var obj = this.remove(fromId);\n  var index = null;\n\n  if (placement === 'before') index = this.insertBefore(obj, toId);else if (placement === 'after') index = this.insertAfter(obj, toId);else if (placement === 'prepend') index = this.prepend(obj, toId);else if (placement === 'append') index = this.append(obj, toId);\n\n  // todo: perf\n  this.updateNodesPosition();\n  return index;\n};\n\nproto.getNodeByTop = function (top) {\n  var indexes = this.indexes;\n  for (var id in indexes) {\n    if (indexes.hasOwnProperty(id)) {\n      if (indexes[id].top === top) return indexes[id];\n    }\n  }\n};\n\nmodule.exports = Tree;"],"mappings":"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"},"metadata":{},"sourceType":"script"}