{"ast":null,"code":"import isObject from './private/isObject.js';\nimport getEachDeep from './getEachDeep.js';\nimport getCondense from './getCondense.js';\nexport default function getFilterDeep(_) {\n  const eachDeep = getEachDeep(_);\n  const condense = getCondense(_);\n  function filterDeep(obj, predicate, options) {\n    predicate = _.iteratee(predicate);\n    if (!options) {\n      options = {};\n    } else {\n      options = _.cloneDeep(options);\n      if (options.leafsOnly !== undefined) {\n        options.leavesOnly = options.leafsOnly;\n      }\n    }\n    if (!options.onTrue) {\n      options.onTrue = {};\n    }\n    if (!options.onFalse) {\n      options.onFalse = {};\n    }\n    if (!options.onUndefined) {\n      options.onUndefined = {};\n    }\n    if (options.childrenPath !== undefined) {\n      if (options.onTrue.skipChildren === undefined) {\n        options.onTrue.skipChildren = false;\n      }\n      if (options.onUndefined.skipChildren === undefined) {\n        options.onUndefined.skipChildren = false;\n      }\n      if (options.onFalse.skipChildren === undefined) {\n        options.onFalse.skipChildren = false;\n      }\n      if (options.onTrue.cloneDeep === undefined) {\n        options.onTrue.cloneDeep = true;\n      }\n      if (options.onUndefined.cloneDeep === undefined) {\n        options.onUndefined.cloneDeep = true;\n      }\n      if (options.onFalse.cloneDeep === undefined) {\n        options.onFalse.cloneDeep = true;\n      }\n    }\n    options = _.merge({\n      checkCircular: false,\n      keepCircular: true,\n      //replaceCircularBy: <by>,\n      leavesOnly: options.childrenPath === undefined,\n      condense: true,\n      cloneDeep: _.cloneDeep,\n      pathFormat: 'string',\n      onTrue: {\n        skipChildren: true,\n        cloneDeep: true,\n        keepIfEmpty: true\n      },\n      onUndefined: {\n        skipChildren: false,\n        cloneDeep: false,\n        keepIfEmpty: false\n      },\n      onFalse: {\n        skipChildren: true,\n        cloneDeep: false,\n        keepIfEmpty: false\n      }\n    }, options);\n    const eachDeepOptions = {\n      pathFormat: options.pathFormat,\n      checkCircular: options.checkCircular,\n      childrenPath: options.childrenPath,\n      includeRoot: options.includeRoot,\n      rootIsChildren: options.rootIsChildren,\n      ownPropertiesOnly: options.ownPropertiesOnly,\n      callbackAfterIterate: true,\n      leavesOnly: false\n    };\n    const resIsArray = Array.isArray(obj);\n    let res = resIsArray ? [] : isObject(obj) ? {} : null;\n    const toCondense = options.condense ? [] : false;\n    eachDeep(obj, function (value, key, parent, context) {\n      if (!context.afterIterate) {\n        context.info._filterDeep = {};\n        if (!context.isCircular) {\n          let reply = !options.leavesOnly || context.isLeaf ? predicate(value, key, parent, context) : undefined;\n          if (!isObject(reply)) {\n            if (reply === undefined) {\n              reply = options.onUndefined;\n            } else if (reply) {\n              reply = options.onTrue;\n            } else {\n              reply = options.onFalse;\n            }\n          }\n          context.info._filterDeep.reply = reply;\n          context.info._filterDeep.empty = reply.empty === undefined ? true : reply.empty;\n          if (reply.keepIfEmpty || !reply.skipChildren) {\n            if (options.cloneDeep && reply.cloneDeep) {\n              if (context.path !== undefined) {\n                let children = takeResultParent(context, res);\n                context.info._filterDeep.res = children[key] = options.cloneDeep(value);\n              } else {\n                context.info._filterDeep.res = res = options.cloneDeep(value);\n              }\n            } else {\n              if (context.path !== undefined) {\n                let children = takeResultParent(context, res);\n                context.info._filterDeep.res = children[key] = context.info.isArray ? [] : context.info.isObject ? {} : value;\n              } else {\n                context.info._filterDeep.res = res = context.info.isArray ? [] : context.info.isObject ? {} : value;\n              }\n            }\n          }\n          return !reply.skipChildren;\n        } else {\n          let children = takeResultParent(context, res);\n          if (!options.keepCircular) {\n            delete children[key];\n            if (toCondense && (children === context.parent.info._filterDeep.res && context.parent.info.isArray || Array.isArray(children)) && !context.parent.info._filterDeep.isSparse) {\n              context.parent.info._filterDeep.isSparse = true;\n              toCondense.push(context.parent.info);\n            }\n            context.info._filterDeep.excluded = true;\n          } else {\n            context.info._filterDeep.res = children[key] = 'replaceCircularBy' in options ? options.replaceCircularBy : context.circularParent.path !== undefined ? context.circularParent.info._filterDeep.res : res;\n          }\n          return false;\n        }\n      } else if (context.afterIterate && !context.isCircular) {\n        const reply = context.info._filterDeep.reply;\n        if (context.info._filterDeep.empty && !reply.keepIfEmpty) {\n          if (context.path === undefined) {\n            res = null;\n          } else {\n            let children = takeResultParent(context, res);\n            delete children[key];\n            if (toCondense && (children === context.parent.info._filterDeep.res && context.parent.info.isArray || Array.isArray(children)) && !context.parent.info._filterDeep.isSparse) {\n              context.parent.info._filterDeep.isSparse = true;\n              toCondense.push(context.parent.info);\n            }\n            context.info._filterDeep.excluded = true;\n          }\n        } else {\n          let parent = context.parent;\n          while (parent) {\n            // if (!parent.info._filterDeep) {\n            //   parent.info._filterDeep = {};\n            // }\n            if (!parent.info._filterDeep.reply) {\n              parent.info._filterDeep.reply = options.onUndefined;\n            }\n            if (!parent.info._filterDeep.empty) {\n              break;\n            }\n            parent.info._filterDeep.empty = false;\n            parent = parent.parent;\n          }\n        }\n        return;\n      }\n    }, eachDeepOptions);\n    if (toCondense) {\n      for (var i = 0; i < toCondense.length; i++) {\n        const info = toCondense[i];\n        if (info._filterDeep.isSparse && !info._filterDeep.excluded) {\n          condense(info.children);\n        }\n      }\n      if (resIsArray) {\n        condense(res);\n      }\n    }\n    if (resIsArray && !res.length && !eachDeepOptions.includeRoot) {\n      return null;\n    }\n    return res;\n  }\n  return filterDeep;\n  function takeResultParent(context, res) {\n    if (context.parent.info.children) {\n      return context.parent.info.children;\n    }\n    if (!context.parent.info._filterDeep) {\n      context.parent.info._filterDeep = {};\n    }\n    let parent = context.parent.info._filterDeep.res;\n    if (parent === undefined) {\n      //if (!context.parent.parent) {\n      parent = context.parent.info._filterDeep.res = res;\n      // } else {\n      //   parent = context.parent.info._filterDeep.res = Array.isArray(context.parent.value)\n      //     ? []\n      //     : {};\n      // }\n    }\n\n    if (context._item.childrenPath) {\n      let oParent = context.parent.value;\n      for (let i = 0; i < context._item.childrenPath.length; i++) {\n        const childKey = context._item.childrenPath[i];\n        oParent = oParent[childKey];\n        if (!parent[childKey]) {\n          parent[childKey] = Array.isArray(oParent) ? [] : {};\n        }\n        parent = parent[childKey];\n      }\n    }\n    context.parent.info.children = parent;\n    return parent;\n  }\n}","map":{"version":3,"names":["isObject","getEachDeep","getCondense","getFilterDeep","_","eachDeep","condense","filterDeep","obj","predicate","options","iteratee","cloneDeep","leafsOnly","undefined","leavesOnly","onTrue","onFalse","onUndefined","childrenPath","skipChildren","merge","checkCircular","keepCircular","pathFormat","keepIfEmpty","eachDeepOptions","includeRoot","rootIsChildren","ownPropertiesOnly","callbackAfterIterate","resIsArray","Array","isArray","res","toCondense","value","key","parent","context","afterIterate","info","_filterDeep","isCircular","reply","isLeaf","empty","path","children","takeResultParent","isSparse","push","excluded","replaceCircularBy","circularParent","i","length","_item","oParent","childKey"],"sources":["/Users/akwg7/Documents/react/RISE1/file-explorer-rise/frontend/node_modules/deepdash/es/getFilterDeep.js"],"sourcesContent":["import isObject from './private/isObject.js';\nimport getEachDeep from './getEachDeep.js';\nimport getCondense from './getCondense.js';\n\nexport default function getFilterDeep(_) {\n  const eachDeep = getEachDeep(_);\n  const condense = getCondense(_);\n\n  function filterDeep(obj, predicate, options) {\n    predicate = _.iteratee(predicate);\n    if (!options) {\n      options = {};\n    } else {\n      options = _.cloneDeep(options);\n      if (options.leafsOnly !== undefined) {\n        options.leavesOnly = options.leafsOnly;\n      }\n    }\n    if (!options.onTrue) {\n      options.onTrue = {};\n    }\n    if (!options.onFalse) {\n      options.onFalse = {};\n    }\n    if (!options.onUndefined) {\n      options.onUndefined = {};\n    }\n    if (options.childrenPath !== undefined) {\n      if (options.onTrue.skipChildren === undefined) {\n        options.onTrue.skipChildren = false;\n      }\n      if (options.onUndefined.skipChildren === undefined) {\n        options.onUndefined.skipChildren = false;\n      }\n      if (options.onFalse.skipChildren === undefined) {\n        options.onFalse.skipChildren = false;\n      }\n\n      if (options.onTrue.cloneDeep === undefined) {\n        options.onTrue.cloneDeep = true;\n      }\n      if (options.onUndefined.cloneDeep === undefined) {\n        options.onUndefined.cloneDeep = true;\n      }\n      if (options.onFalse.cloneDeep === undefined) {\n        options.onFalse.cloneDeep = true;\n      }\n    }\n    options = _.merge(\n      {\n        checkCircular: false,\n        keepCircular: true,\n        //replaceCircularBy: <by>,\n        leavesOnly: options.childrenPath === undefined,\n        condense: true,\n        cloneDeep: _.cloneDeep,\n        pathFormat: 'string',\n        onTrue: { skipChildren: true, cloneDeep: true, keepIfEmpty: true },\n        onUndefined: {\n          skipChildren: false,\n          cloneDeep: false,\n          keepIfEmpty: false,\n        },\n        onFalse: {\n          skipChildren: true,\n          cloneDeep: false,\n          keepIfEmpty: false,\n        },\n      },\n      options\n    );\n\n    const eachDeepOptions = {\n      pathFormat: options.pathFormat,\n      checkCircular: options.checkCircular,\n      childrenPath: options.childrenPath,\n      includeRoot: options.includeRoot,\n      rootIsChildren: options.rootIsChildren,\n      ownPropertiesOnly: options.ownPropertiesOnly,\n      callbackAfterIterate: true,\n      leavesOnly: false,\n    };\n    const resIsArray = Array.isArray(obj);\n    let res = resIsArray ? [] : isObject(obj) ? {} : null;\n    const toCondense = options.condense ? [] : false;\n    eachDeep(\n      obj,\n      function (value, key, parent, context) {\n        if (!context.afterIterate) {\n          context.info._filterDeep = {};\n          if (!context.isCircular) {\n            let reply =\n              !options.leavesOnly || context.isLeaf\n                ? predicate(value, key, parent, context)\n                : undefined;\n\n            if (!isObject(reply)) {\n              if (reply === undefined) {\n                reply = options.onUndefined;\n              } else if (reply) {\n                reply = options.onTrue;\n              } else {\n                reply = options.onFalse;\n              }\n            }\n            context.info._filterDeep.reply = reply;\n            context.info._filterDeep.empty =\n              reply.empty === undefined ? true : reply.empty;\n\n            if (reply.keepIfEmpty || !reply.skipChildren) {\n              if (options.cloneDeep && reply.cloneDeep) {\n                if (context.path !== undefined) {\n                  let children = takeResultParent(context, res);\n                  context.info._filterDeep.res = children[\n                    key\n                  ] = options.cloneDeep(value);\n                } else {\n                  context.info._filterDeep.res = res = options.cloneDeep(value);\n                }\n              } else {\n                if (context.path !== undefined) {\n                  let children = takeResultParent(context, res);\n                  context.info._filterDeep.res = children[key] = context.info\n                    .isArray\n                    ? []\n                    : context.info.isObject\n                    ? {}\n                    : value;\n                } else {\n                  context.info._filterDeep.res = res = context.info.isArray\n                    ? []\n                    : context.info.isObject\n                    ? {}\n                    : value;\n                }\n              }\n            }\n            return !reply.skipChildren;\n          } else {\n            let children = takeResultParent(context, res);\n            if (!options.keepCircular) {\n              delete children[key];\n              if (\n                toCondense &&\n                ((children === context.parent.info._filterDeep.res &&\n                  context.parent.info.isArray) ||\n                  Array.isArray(children)) &&\n                !context.parent.info._filterDeep.isSparse\n              ) {\n                context.parent.info._filterDeep.isSparse = true;\n                toCondense.push(context.parent.info);\n              }\n\n              context.info._filterDeep.excluded = true;\n            } else {\n              context.info._filterDeep.res = children[key] =\n                'replaceCircularBy' in options\n                  ? options.replaceCircularBy\n                  : context.circularParent.path !== undefined\n                  ? context.circularParent.info._filterDeep.res\n                  : res;\n            }\n            return false;\n          }\n        } else if (context.afterIterate && !context.isCircular) {\n          const reply = context.info._filterDeep.reply;\n\n          if (context.info._filterDeep.empty && !reply.keepIfEmpty) {\n            if (context.path === undefined) {\n              res = null;\n            } else {\n              let children = takeResultParent(context, res);\n              delete children[key];\n              if (\n                toCondense &&\n                ((children === context.parent.info._filterDeep.res &&\n                  context.parent.info.isArray) ||\n                  Array.isArray(children)) &&\n                !context.parent.info._filterDeep.isSparse\n              ) {\n                context.parent.info._filterDeep.isSparse = true;\n                toCondense.push(context.parent.info);\n              }\n              context.info._filterDeep.excluded = true;\n            }\n          } else {\n            let parent = context.parent;\n            while (parent) {\n              // if (!parent.info._filterDeep) {\n              //   parent.info._filterDeep = {};\n              // }\n              if (!parent.info._filterDeep.reply) {\n                parent.info._filterDeep.reply = options.onUndefined;\n              }\n              if (!parent.info._filterDeep.empty) {\n                break;\n              }\n              parent.info._filterDeep.empty = false;\n              parent = parent.parent;\n            }\n          }\n\n          return;\n        }\n      },\n      eachDeepOptions\n    );\n\n    if (toCondense) {\n      for (var i = 0; i < toCondense.length; i++) {\n        const info = toCondense[i];\n        if (info._filterDeep.isSparse && !info._filterDeep.excluded) {\n          condense(info.children);\n        }\n      }\n      if (resIsArray) {\n        condense(res);\n      }\n    }\n    if (resIsArray && !res.length && !eachDeepOptions.includeRoot) {\n      return null;\n    }\n\n    return res;\n  }\n  return filterDeep;\n\n  function takeResultParent(context, res) {\n    if (context.parent.info.children) {\n      return context.parent.info.children;\n    }\n    if (!context.parent.info._filterDeep) {\n      context.parent.info._filterDeep = {};\n    }\n    let parent = context.parent.info._filterDeep.res;\n    if (parent === undefined) {\n      //if (!context.parent.parent) {\n      parent = context.parent.info._filterDeep.res = res;\n      // } else {\n      //   parent = context.parent.info._filterDeep.res = Array.isArray(context.parent.value)\n      //     ? []\n      //     : {};\n      // }\n    }\n    if (context._item.childrenPath) {\n      let oParent = context.parent.value;\n      for (let i = 0; i < context._item.childrenPath.length; i++) {\n        const childKey = context._item.childrenPath[i];\n        oParent = oParent[childKey];\n        if (!parent[childKey]) {\n          parent[childKey] = Array.isArray(oParent) ? [] : {};\n        }\n        parent = parent[childKey];\n      }\n    }\n    context.parent.info.children = parent;\n    return parent;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}