{"ast":null,"code":"var rxArrIndex = /\\D/;\nvar rxVarName = /^[a-zA-Z_$]+([\\w_$]*)$/;\nvar rxQuot = /\"/g;\nfunction joinPaths() {\n  for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n    paths[_key] = arguments[_key];\n  }\n  return paths.reduce((acc, p) => acc ? !p || p.startsWith('[') ? `${acc}${p}` : `${acc}.${p}` : p, '');\n}\nexport default function getPathToString(_) {\n  function pathToString(path) {\n    for (var _len2 = arguments.length, prefixes = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      prefixes[_key2 - 1] = arguments[_key2];\n    }\n    prefixes = prefixes.filter(p => p !== undefined);\n    if (_.isString(path)) return joinPaths(...prefixes, path);\n    if (!Array.isArray(path)) return undefined;\n    prefixes = joinPaths(...prefixes);\n    return path.reduce((acc, value) => {\n      const type = typeof value;\n      if (type === 'number') {\n        if (value < 0 || value % 1 !== 0) {\n          return `${acc}[\"${value}\"]`;\n        } else {\n          return `${acc}[${value}]`;\n        }\n      } else if (type !== 'string') {\n        return `${acc}[\"${value}\"]`;\n      } else if (!value) {\n        return `${acc}[\"\"]`;\n      }\n      if (!rxArrIndex.test(value)) {\n        return `${acc}[${value}]`;\n      }\n      if (rxVarName.test(value)) {\n        if (acc) {\n          return `${acc}.${value}`;\n        } else {\n          return `${acc}${value}`;\n        }\n      }\n      return `${acc}[\"${value.replace(rxQuot, '\\\\\"')}\"]`;\n    }, prefixes);\n  }\n  return pathToString;\n}\ngetPathToString.notChainable = true;","map":{"version":3,"names":["rxArrIndex","rxVarName","rxQuot","joinPaths","paths","reduce","acc","p","startsWith","getPathToString","_","pathToString","path","prefixes","filter","undefined","isString","Array","isArray","value","type","test","replace","notChainable"],"sources":["/Users/akwg7/Documents/react/RISE1/file-explorer-rise/frontend/node_modules/deepdash/es/getPathToString.js"],"sourcesContent":["var rxArrIndex = /\\D/;\nvar rxVarName = /^[a-zA-Z_$]+([\\w_$]*)$/;\nvar rxQuot = /\"/g;\n\nfunction joinPaths(...paths) {\n  return paths.reduce(\n    (acc, p) =>\n      acc ? (!p || p.startsWith('[') ? `${acc}${p}` : `${acc}.${p}`) : p,\n    ''\n  );\n}\n\nexport default function getPathToString(_) {\n  function pathToString(path, ...prefixes) {\n    prefixes = prefixes.filter((p) => p !== undefined);\n    if (_.isString(path)) return joinPaths(...prefixes, path);\n    if (!Array.isArray(path)) return undefined;\n    prefixes = joinPaths(...prefixes);\n    return path.reduce((acc, value) => {\n      const type = typeof value;\n      if (type === 'number') {\n        if (value < 0 || value % 1 !== 0) {\n          return `${acc}[\"${value}\"]`;\n        } else {\n          return `${acc}[${value}]`;\n        }\n      } else if (type !== 'string') {\n        return `${acc}[\"${value}\"]`;\n      } else if (!value) {\n        return `${acc}[\"\"]`;\n      }\n      if (!rxArrIndex.test(value)) {\n        return `${acc}[${value}]`;\n      }\n      if (rxVarName.test(value)) {\n        if (acc) {\n          return `${acc}.${value}`;\n        } else {\n          return `${acc}${value}`;\n        }\n      }\n      return `${acc}[\"${value.replace(rxQuot, '\\\\\"')}\"]`;\n    }, prefixes);\n  }\n  return pathToString;\n}\n\ngetPathToString.notChainable = true;\n"],"mappings":"AAAA,IAAIA,UAAU,GAAG,IAAI;AACrB,IAAIC,SAAS,GAAG,wBAAwB;AACxC,IAAIC,MAAM,GAAG,IAAI;AAEjB,SAASC,SAAS,GAAW;EAAA,kCAAPC,KAAK;IAALA,KAAK;EAAA;EACzB,OAAOA,KAAK,CAACC,MAAM,CACjB,CAACC,GAAG,EAAEC,CAAC,KACLD,GAAG,GAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU,CAAC,GAAG,CAAC,GAAI,GAAEF,GAAI,GAAEC,CAAE,EAAC,GAAI,GAAED,GAAI,IAAGC,CAAE,EAAC,GAAIA,CAAC,EACpE,EAAE,CACH;AACH;AAEA,eAAe,SAASE,eAAe,CAACC,CAAC,EAAE;EACzC,SAASC,YAAY,CAACC,IAAI,EAAe;IAAA,mCAAVC,QAAQ;MAARA,QAAQ;IAAA;IACrCA,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAAEP,CAAC,IAAKA,CAAC,KAAKQ,SAAS,CAAC;IAClD,IAAIL,CAAC,CAACM,QAAQ,CAACJ,IAAI,CAAC,EAAE,OAAOT,SAAS,CAAC,GAAGU,QAAQ,EAAED,IAAI,CAAC;IACzD,IAAI,CAACK,KAAK,CAACC,OAAO,CAACN,IAAI,CAAC,EAAE,OAAOG,SAAS;IAC1CF,QAAQ,GAAGV,SAAS,CAAC,GAAGU,QAAQ,CAAC;IACjC,OAAOD,IAAI,CAACP,MAAM,CAAC,CAACC,GAAG,EAAEa,KAAK,KAAK;MACjC,MAAMC,IAAI,GAAG,OAAOD,KAAK;MACzB,IAAIC,IAAI,KAAK,QAAQ,EAAE;QACrB,IAAID,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;UAChC,OAAQ,GAAEb,GAAI,KAAIa,KAAM,IAAG;QAC7B,CAAC,MAAM;UACL,OAAQ,GAAEb,GAAI,IAAGa,KAAM,GAAE;QAC3B;MACF,CAAC,MAAM,IAAIC,IAAI,KAAK,QAAQ,EAAE;QAC5B,OAAQ,GAAEd,GAAI,KAAIa,KAAM,IAAG;MAC7B,CAAC,MAAM,IAAI,CAACA,KAAK,EAAE;QACjB,OAAQ,GAAEb,GAAI,MAAK;MACrB;MACA,IAAI,CAACN,UAAU,CAACqB,IAAI,CAACF,KAAK,CAAC,EAAE;QAC3B,OAAQ,GAAEb,GAAI,IAAGa,KAAM,GAAE;MAC3B;MACA,IAAIlB,SAAS,CAACoB,IAAI,CAACF,KAAK,CAAC,EAAE;QACzB,IAAIb,GAAG,EAAE;UACP,OAAQ,GAAEA,GAAI,IAAGa,KAAM,EAAC;QAC1B,CAAC,MAAM;UACL,OAAQ,GAAEb,GAAI,GAAEa,KAAM,EAAC;QACzB;MACF;MACA,OAAQ,GAAEb,GAAI,KAAIa,KAAK,CAACG,OAAO,CAACpB,MAAM,EAAE,KAAK,CAAE,IAAG;IACpD,CAAC,EAAEW,QAAQ,CAAC;EACd;EACA,OAAOF,YAAY;AACrB;AAEAF,eAAe,CAACc,YAAY,GAAG,IAAI"},"metadata":{},"sourceType":"module"}