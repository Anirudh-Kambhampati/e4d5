{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport config from '../data/config';\nconst endpoint = config.apiEndpoint + '/folder-tree';\nexport const folderTreeApi = createApi({\n  reducerPath: 'folderTreeApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: endpoint\n  }),\n  endpoints: builder => ({\n    getFolderTree: builder.query({\n      query: id => {\n        return {\n          url: `${endpoint}/${id}`,\n          method: 'GET'\n        };\n      }\n    }),\n    updateFolderTree: builder.query({\n      query: _ref => {\n        let {\n          id,\n          tree\n        } = _ref;\n        return {\n          url: `${endpoint}/${id}`,\n          method: 'PUT',\n          body: tree\n        };\n      }\n    })\n  })\n});\nexport const {\n  useGetFolderTreeQuery,\n  useLazyUpdateFolderTreeQuery\n} = folderTreeApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","config","endpoint","apiEndpoint","folderTreeApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getFolderTree","query","id","url","method","updateFolderTree","tree","body","useGetFolderTreeQuery","useLazyUpdateFolderTreeQuery"],"sources":["/Users/akwg7/Documents/react/RISE1/file-explorer-rise/frontend/src/apiServices/treeService.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport config from '../data/config';\n\nconst endpoint = config.apiEndpoint + '/folder-tree';\n\nexport const folderTreeApi = createApi({\n  reducerPath: 'folderTreeApi',\n  baseQuery: fetchBaseQuery({ baseUrl: endpoint }),\n  endpoints: (builder) => ({\n    getFolderTree: builder.query({\n      query: (id) => {\n        return {\n          url: `${endpoint}/${id}`,\n          method: 'GET',\n        };\n      },\n    }),\n    updateFolderTree: builder.query({\n      query: ({ id, tree }) => {\n        return {\n          url: `${endpoint}/${id}`,\n          method: 'PUT',\n          body: tree,\n        };\n      },\n    }),\n  }),\n});\n\nexport const { useGetFolderTreeQuery, useLazyUpdateFolderTreeQuery } =\n  folderTreeApi;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AACxE,OAAOC,MAAM,MAAM,gBAAgB;AAEnC,MAAMC,QAAQ,GAAGD,MAAM,CAACE,WAAW,GAAG,cAAc;AAEpD,OAAO,MAAMC,aAAa,GAAGL,SAAS,CAAC;EACrCM,WAAW,EAAE,eAAe;EAC5BC,SAAS,EAAEN,cAAc,CAAC;IAAEO,OAAO,EAAEL;EAAS,CAAC,CAAC;EAChDM,SAAS,EAAGC,OAAO,KAAM;IACvBC,aAAa,EAAED,OAAO,CAACE,KAAK,CAAC;MAC3BA,KAAK,EAAGC,EAAE,IAAK;QACb,OAAO;UACLC,GAAG,EAAG,GAAEX,QAAS,IAAGU,EAAG,EAAC;UACxBE,MAAM,EAAE;QACV,CAAC;MACH;IACF,CAAC,CAAC;IACFC,gBAAgB,EAAEN,OAAO,CAACE,KAAK,CAAC;MAC9BA,KAAK,EAAE,QAAkB;QAAA,IAAjB;UAAEC,EAAE;UAAEI;QAAK,CAAC;QAClB,OAAO;UACLH,GAAG,EAAG,GAAEX,QAAS,IAAGU,EAAG,EAAC;UACxBE,MAAM,EAAE,KAAK;UACbG,IAAI,EAAED;QACR,CAAC;MACH;IACF,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,qBAAqB;EAAEC;AAA6B,CAAC,GAClEf,aAAa"},"metadata":{},"sourceType":"module"}