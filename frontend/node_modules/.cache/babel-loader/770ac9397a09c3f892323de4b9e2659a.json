{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\nimport config from '../data/config';\nconst endpoint = config.apiEndpoint + '/users';\nexport const usersApi = createApi({\n  reducerPath: 'usersApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: endpoint\n  }),\n  endpoints: builder => ({\n    getAllUsers: builder.query({\n      query: role => {\n        return {\n          url: role,\n          method: 'GET'\n        };\n      },\n      providesTags: ['users']\n    }),\n    postUserData: builder.mutation({\n      query: _ref => {\n        let {\n          userId,\n          sharedFileIds\n        } = _ref;\n        return {\n          url: `${userId}/share-files`,\n          method: 'POST',\n          body: {\n            userId,\n            sharedFileIds\n          }\n        };\n      },\n      invalidatesTags: ['users']\n    })\n  })\n});\nexport const {\n  useGetAllUsersQuery,\n  usePostUserDataMutation\n} = usersApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","config","endpoint","apiEndpoint","usersApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getAllUsers","query","role","url","method","providesTags","postUserData","mutation","userId","sharedFileIds","body","invalidatesTags","useGetAllUsersQuery","usePostUserDataMutation"],"sources":["/Users/akwg7/Documents/react/RISE1/rise-clean/frontend/src/apiServices/usersService.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\nimport config from '../data/config';\n\nconst endpoint = config.apiEndpoint + '/users';\n\nexport const usersApi = createApi({\n  reducerPath: 'usersApi',\n  baseQuery: fetchBaseQuery({ baseUrl: endpoint }),\n  endpoints: (builder) => ({\n    getAllUsers: builder.query({\n      query: (role) => {\n        return {\n          url: role,\n          method: 'GET',\n        };\n      },\n      providesTags: ['users'],\n    }),\n    postUserData: builder.mutation({\n      query: ({ userId, sharedFileIds }) => {\n        return {\n          url: `${userId}/share-files`,\n          method: 'POST',\n          body: {\n            userId,\n            sharedFileIds,\n          },\n        };\n      },\n      invalidatesTags: ['users'],\n    }),\n  }),\n});\n\nexport const { useGetAllUsersQuery, usePostUserDataMutation } = usersApi;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,mCAAmC;AAC7E,OAAOC,MAAM,MAAM,gBAAgB;AAEnC,MAAMC,QAAQ,GAAGD,MAAM,CAACE,WAAW,GAAG,QAAQ;AAE9C,OAAO,MAAMC,QAAQ,GAAGL,SAAS,CAAC;EAChCM,WAAW,EAAE,UAAU;EACvBC,SAAS,EAAEN,cAAc,CAAC;IAAEO,OAAO,EAAEL;EAAS,CAAC,CAAC;EAChDM,SAAS,EAAGC,OAAO,KAAM;IACvBC,WAAW,EAAED,OAAO,CAACE,KAAK,CAAC;MACzBA,KAAK,EAAGC,IAAI,IAAK;QACf,OAAO;UACLC,GAAG,EAAED,IAAI;UACTE,MAAM,EAAE;QACV,CAAC;MACH,CAAC;MACDC,YAAY,EAAE,CAAC,OAAO;IACxB,CAAC,CAAC;IACFC,YAAY,EAAEP,OAAO,CAACQ,QAAQ,CAAC;MAC7BN,KAAK,EAAE,QAA+B;QAAA,IAA9B;UAAEO,MAAM;UAAEC;QAAc,CAAC;QAC/B,OAAO;UACLN,GAAG,EAAG,GAAEK,MAAO,cAAa;UAC5BJ,MAAM,EAAE,MAAM;UACdM,IAAI,EAAE;YACJF,MAAM;YACNC;UACF;QACF,CAAC;MACH,CAAC;MACDE,eAAe,EAAE,CAAC,OAAO;IAC3B,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC,mBAAmB;EAAEC;AAAwB,CAAC,GAAGnB,QAAQ"},"metadata":{},"sourceType":"module"}