{"ast":null,"code":"var _jsxFileName = \"/Users/akwg7/Documents/react/RISE1/file-explorer-rise/frontend/src/pages/HomePage/Files/ImageGrid.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { ContextMenu, ContextMenuTrigger, MenuItem } from \"react-contextmenu\";\n// Rendering individual images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Image = _ref => {\n  let {\n    image,\n    handleDelete,\n    handleClick = () => {}\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-item\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: `img - ${image.id}`,\n      src: image.src,\n      className: \"file-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n// ImageList Component//\n_c = Image;\nconst ImageGride = _ref2 => {\n  _s();\n  let {\n    images\n  } = _ref2;\n  const [img, setImg] = useState([]);\n  const removeElement = id => {\n    const newImgs = images.filter(item => item.id !== id);\n    // console.log(newImgs);\n    setImg(newImgs);\n  };\n\n  // render each image by calling Image component\n  const renderImage = (image, index) => {\n    return /*#__PURE__*/_jsxDEV(Image, {\n      image: image\n    }, `${image.id}-image`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  };\n  // Return the list of files//\n  const results = [];\n  images.forEach(element => {\n    results.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removeElement(element.id),\n      style: {\n        color: \"red\"\n      },\n      children: \"Remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-list\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [images.map(renderImage), results]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGride, \"5giIuWMs3gqdIOkS1rphGdQRl2I=\");\n_c2 = ImageGride;\nexport default ImageGride;\nvar _c, _c2;\n$RefreshReg$(_c, \"Image\");\n$RefreshReg$(_c2, \"ImageGride\");","map":{"version":3,"names":["React","useState","ContextMenu","ContextMenuTrigger","MenuItem","Image","image","handleDelete","handleClick","id","src","ImageGride","images","img","setImg","removeElement","newImgs","filter","item","renderImage","index","results","forEach","element","push","color","map"],"sources":["/Users/akwg7/Documents/react/RISE1/file-explorer-rise/frontend/src/pages/HomePage/Files/ImageGrid.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { ContextMenu, ContextMenuTrigger, MenuItem } from \"react-contextmenu\";\n// Rendering individual images\nconst Image = ({ image, handleDelete, handleClick = () => {} }) => {\n  return (\n    <div className=\"file-item\">\n      <img alt={`img - ${image.id}`} src={image.src} className=\"file-img\" />\n    </div>\n  );\n};\n\n// ImageList Component//\nconst ImageGride = ({ images }) => {\n  const [img, setImg] = useState([]);\n  const removeElement = (id) => {\n    const newImgs = images.filter((item) => item.id !== id);\n    // console.log(newImgs);\n    setImg(newImgs);\n  };\n\n  // render each image by calling Image component\n  const renderImage = (image, index) => {\n    return <Image image={image} key={`${image.id}-image`} />;\n  };\n  // Return the list of files//\n  const results = [];\n  images.forEach((element) => {\n    results.push(\n      <button\n        onClick={() => removeElement(element.id)}\n        style={{ color: \"red\" }}\n      >\n        Remove\n      </button>\n    );\n  });\n\n  return (\n    <div>\n      <section className=\"file-list\">\n        <span>\n          {images.map(renderImage)}\n          {/* <button onClick={() => removeElement(images.id)}>Remove</button> */}\n          {results}\n        </span>\n      </section>\n      {/* {images.map((x) => x.id)} */}\n      {/* {console.log(images)} */}\n    </div>\n  );\n};\n\nexport default ImageGride;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,kBAAkB,EAAEC,QAAQ,QAAQ,mBAAmB;AAC7E;AAAA;AACA,MAAMC,KAAK,GAAG,QAAqD;EAAA,IAApD;IAAEC,KAAK;IAAEC,YAAY;IAAEC,WAAW,GAAG,MAAM,CAAC;EAAE,CAAC;EAC5D,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,uBACxB;MAAK,GAAG,EAAG,SAAQF,KAAK,CAACG,EAAG,EAAE;MAAC,GAAG,EAAEH,KAAK,CAACI,GAAI;MAAC,SAAS,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAClE;AAEV,CAAC;;AAED;AAAA,KARML,KAAK;AASX,MAAMM,UAAU,GAAG,SAAgB;EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC;EAC5B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAMc,aAAa,GAAIN,EAAE,IAAK;IAC5B,MAAMO,OAAO,GAAGJ,MAAM,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACT,EAAE,KAAKA,EAAE,CAAC;IACvD;IACAK,MAAM,CAACE,OAAO,CAAC;EACjB,CAAC;;EAED;EACA,MAAMG,WAAW,GAAG,CAACb,KAAK,EAAEc,KAAK,KAAK;IACpC,oBAAO,QAAC,KAAK;MAAC,KAAK,EAAEd;IAAM,GAAO,GAAEA,KAAK,CAACG,EAAG,QAAO;MAAA;MAAA;MAAA;IAAA,QAAI;EAC1D,CAAC;EACD;EACA,MAAMY,OAAO,GAAG,EAAE;EAClBT,MAAM,CAACU,OAAO,CAAEC,OAAO,IAAK;IAC1BF,OAAO,CAACG,IAAI,eACV;MACE,OAAO,EAAE,MAAMT,aAAa,CAACQ,OAAO,CAACd,EAAE,CAAE;MACzC,KAAK,EAAE;QAAEgB,KAAK,EAAE;MAAM,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGjB,CACV;EACH,CAAC,CAAC;EAEF,oBACE;IAAA,uBACE;MAAS,SAAS,EAAC,WAAW;MAAA,uBAC5B;QAAA,WACGb,MAAM,CAACc,GAAG,CAACP,WAAW,CAAC,EAEvBE,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QAGN;AAEV,CAAC;AAAC,GAtCIV,UAAU;AAAA,MAAVA,UAAU;AAwChB,eAAeA,UAAU;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}